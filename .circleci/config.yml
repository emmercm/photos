version: 2.1

executors:
  docker:
    docker:
      - image: docker:stable
  golang:
    docker:
      - image: circleci/golang:1.13.1
  node:
    docker:
      - image: circleci/node:10.16.3

jobs:
  go-checkout:
    executor: golang
    steps:
      - checkout
      - run: go mod download
      - save_cache:
          key: go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"

  go-build:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: |
          sudo apt update
          sudo apt install --yes build-essential
      - run: go build -race $(go list ./cmd/...)

  go-test:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: |
          sudo apt update
          sudo apt install --yes build-essential
      - run: go test -race -cover $(go list ./... | grep -v "vendor")

  go-vet:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: |
          sudo apt update
          sudo apt install --yes build-essential
      - run: go vet $(go list ./... | grep -v "vendor")

  go-lint:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: go get golang.org/x/lint/golint
      - run: golint -set_exit_status ./...

  go-staticcheck:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: |
          sudo apt update
          sudo apt install --yes build-essential
      - run: go get honnef.co/go/tools/cmd/staticcheck
      - run: staticcheck $(go list ./... | grep -v "vendor")

  go-mod-tidy:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - go-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"
      - run: |
          MD5=$(md5sum go.mod go.sum)
          go mod tidy && go fmt ./...
          if [[ "$(md5sum go.mod go.sum)" != "${MD5}" ]]; then exit 1; fi

  react-checkout:
    executor: node
    steps:
      - checkout
      - run:
          working_directory: "~/project/web"
          command: npm install
      - save_cache:
          key: react-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - "./"

  react-build:
    executor: node
    working_directory: "~/project/web"
    steps:
      - restore_cache:
          keys:
            - react-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: npm run build

  react-test:
    executor: node
    working_directory: "~/project/web"
    steps:
      - restore_cache:
          keys:
            - react-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: npm test

  react-lint:
    executor: node
    working_directory: "~/project/web"
    steps:
      - restore_cache:
          keys:
            - react-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: npm run lint

  docker-build:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build --file build/docker/Dockerfile .

  status-check:
    executor: node
    steps:
      - run: echo OK

workflows:
  version: 2.1
  build:
    jobs:
      - go-checkout
      - go-build:
          requires:
            - go-checkout
      - go-test:
          requires:
            - go-checkout
      - go-vet:
          requires:
            - go-checkout
      - go-lint:
          requires:
            - go-checkout
      - go-staticcheck:
          requires:
            - go-checkout
      - go-mod-tidy:
          requires:
            - go-checkout
              
      - react-checkout
      - react-build:
          requires:
            - react-checkout
      - react-test:
          requires:
            - react-checkout
#      - react-lint:
#          requires:
#            - react-checkout

      - docker-build

      - status-check:
          requires:
            - go-build
            - go-test
            - go-vet
            - go-lint
            - go-staticcheck
            - go-mod-tidy
            - react-build
            - react-test
#            - react-lint
            - docker-build

